#task1

# def test_jackpot(result):
#     return len(set(result)) == 1
# if __name__ == "__main__":
#     result = test_jackpot(["@", "@", "@", "@"])
#     print(result)

#task3

# class Country:
#     def __init__(self, name, population, area):
#         n = str(input("Name: "))
#         self.name = n
#         p = int(input("Population: "))
#         self.population = p
#         a = int(input("Area: "))
#         self.area = a
#
#     def compare_another_country(self, other):
#         a = self.population/self.area
#         b = other.population/self.area
#

#task5

def areDistinct(str, i, j):
    visited = [0] * (26)
    for k in range(i, j + 1):
        if (visited[ord(str[k]) -
                    ord('a')] == True):
            return False
        visited[ord(str[k]) -
                ord('a')] = True
    return True
def longestUniqueSubsttr(str):
    n = len(str)
    res = 0
    for i in range(n):
        for j in range(i, n):
            if (areDistinct(str, i, j)):
                res = max(res, j - i + 1)
    return res
if __name__ == '__main__':
    str = input()
    print("The answer is: ", str)
    len = longestUniqueSubsttr(str)
    print("with the length of: "
          "non-repeating character substring is ", len)


#task6
#
# text = input("Arr = ")
# print(len([i for i in text if i.isalpha()]))
